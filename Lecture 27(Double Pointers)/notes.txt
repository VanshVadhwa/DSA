DOUBLE POINTERS: -

1. These three are giving same output of values: -
    cout << i << endl;
    cout << *p << endl;
    cout << **dp << endl;

2. These three are giving same output of addresses: -
    cout << &i << endl;
    cout << p << endl;
    cout << *dp << endl;

3. int main()
{
    int i=5;
    int j=6;
    int *p=&i;
    *p = 9;
    cout << i << " " << j << endl;
}
Value of i is updated here

4. // int arr[4]={1,2,3,4};
    // int *p=arr;
    // cout << &arr[2] << " " << &p[2] << endl;
    //Both same

    // int arr[4]={1,2,3,4};
    // int *p=arr;
    // cout << p[2] << endl;
    //Giving vale at 2nd index i.e., 3 here

5. char ch = 'a';
    // char *p = &ch;
    // ch++;
    // cout << *p << endl;
    // Output: b

6. char arr[] = "abcde";
    // char *p = &arr[0];
    // cout << p << endl;
    // Output: It prints the complete character array only

7. char arr[] = "abcde";
    // char *p = &arr[0];
    // p++;
    // cout << p << endl;
    // Output: abcde

8. String: -
    // string s="babbar";
    // string *st=&s;
    // cout << *st << " " << st << endl;
    // Output: Value Address

9.  // string s="babbar";
    // string *st=&s;
    // cout << *st << " " << st << " " << st[0] << endl;
    // Output: Whole String Address Whole String

10. int first=100;
    int *p=&first;
    int **q = &p;
    int second= ++(**q);
    // cout << **q == 101;
    int *r = *q;
    ++(*r); // first = 102
    cout << first << " " << second << endl; 
    //Output: 102 101

11.  void increment(int **ptr) {
    ++(**ptr);
} 

// int num = 5;
    // int *pt = &num;
    // int **ptr = &pt;
    // increment(ptr);
    // cout << num << endl;  
    // Output: 6 

    // int num=5;
    // int *ptr = &num;
    // cout << &ptr << " " << ptr << endl;
    // increment(&ptr);
    // cout << num << endl;
    // Output: address of pointer, address of num, value of incremented num 